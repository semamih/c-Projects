#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

int checkError(int number) {
    cin >> number;
    while (cin.fail() == 1) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "Ошибка. Введите число!" << endl;
        cin >> number;
    }
    while (number < 0 || number > 1 ) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "Ошибка. Введите 1 или 0!" << endl;
        cin >> number;
    }
    return number;
} 
int checkError2(int number) {
    cin >> number;
    while (cin.fail() == 1) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "Ошибка. Введите число!" << endl;
        cin >> number;
    }
    while (number < 1 || number > 8) {
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        cout << "Ошибка. Введите число от 1 до 8!!" << endl;
        cin >> number;
    }
    return number;
}
void write(vector<int> inputNumbers){
    std::ofstream file("eight_bits.bin", std::ios::binary);

        if (!file.is_open()) {
            std::cerr << "Не удалось открыть файл для записи." << std::endl;
        }

        // Записываем введенные числа в файл как биты
        unsigned char data = 0;
        for (int i = 0; i < 8; i++) {
            data |= (inputNumbers[i] << (7 - i));
        }

        file.write(reinterpret_cast<char*>(&data), sizeof(data));

        // Закрываем файл
        file.close();
}
void read(vector<int> answers){
    ifstream file("eight_bits.bin", ios::binary);

    if (!file.is_open()) {
        cerr << "Не удалось открыть файл для чтения." << endl;
    }

    // Читаем 1 байт из файла
    unsigned char data;
    file.read(reinterpret_cast<char*>(&data), sizeof(data));

    // Закрываем файл
    file.close();

    // Выводим содержимое байта (восьми бит) в двоичной форме
    for (int i = 7; i >= 0; i--) {
        int bit = (data >> i) & 1;
        answers.push_back(bit);
    }
}
void check() {
    ifstream file("eight_bits.bin", ios::binary);

    if (!file.is_open()) {
        cerr << "Не удалось открыть файл для чтения." << endl;
    }

    // Читаем 1 байт из файла
    unsigned char data;
    file.read(reinterpret_cast<char*>(&data), sizeof(data));

    // Закрываем файл
    file.close();

    // Выводим содержимое байта (восьми бит) в двоичной форме
    cout << "Содержимое файла (в бинарной форме): ";
    for (int i = 7; i >= 0; i--) {
        cout << ((data >> i) & 1);
    }
    cout << endl;
}

int main() {
    setlocale(LC_ALL, "Ru");
    int stop = 1;

    do {
        vector<int> inputNumbers;
        vector<int> answers;
        string questions[8] = {
            "Вы готовы к началу опроса?",
            "Вам нравится шоколад?",
            "Вы курите?",
            "У вас есть домашний питомец?",
            "Вы путешествовали за границу?",
            "Вам нравится мороженое?",
            "Вы занимаетесь спортом?",
            "Вы читаете книги?"
        };

        // Ответы от пользователя
        cout << "Добро пожаловать! Пройдите опрос " << endl << endl;

        for (int i = 0; i < 8; i++) {
            int response = 0;
            cout << "Вопрос " << (i + 1) <<": " << questions[i] << endl << "Да - 1 \nНет - 0" << endl << "Ваш ответ: ";
            response = checkError(response);
            if (response == 1) {
                inputNumbers.push_back(1);
            }
            else if(response == 0) {
                inputNumbers.push_back(0);
            }
            cout << endl;
        }

        write(inputNumbers);
        read(answers);
        cout << "Ответы успешно сохранены!" << endl;
        // Позволяем пользователю изменить ответы
        cout << "Желаете изменить ответы? (Да - 1/Нет - 0) ";
        int change = 0;
        change = checkError(change);
        if (change == 1) {
            int count = 0;
            cout << endl << "Вот список вопросов с вашими ответами" << endl;
            for (size_t i = 0; i < inputNumbers.size(); ++i) {
                cout << "Вопрос " << (i + 1) << ": " << questions[i] << endl << "Ваш ответ: " << inputNumbers[i] << endl;
            }
            cout << endl<<"Введите кол-во вопросов,которые хотите изменить: ";
            count = checkError2(count);
            int num = 0;
            int ans = 0;
            for (int i = 1; i < count + 1; i++) {
                cout << "Введите номер вопроса, который хотите изменить: ";
                num = checkError2(num);
                cout << "Вопрос " << (num ) << ": " << questions[num - 1] << endl << "Да - 1 \nНет - 0" << endl;
                cout << "Введите свой ответ: ";
                ans = checkError(ans);
                if (ans == 1) {
                    inputNumbers[num - 1] = 1;
                }
                else if (ans == 0) {
                    inputNumbers[num - 1] = 0;
                }
                write(inputNumbers);
                cout << "Ответ успешно обновлён!" << endl << endl;
            }

            cout << "Спасибо за пройденный опрос!";
            cout << endl << "Вот список вопросов с вашими ответами" << endl;
            for (size_t i = 0; i < inputNumbers.size(); ++i) {
                cout << "Вопрос " << (i + 1) << ": " << questions[i] << endl << "Ваш ответ: " << inputNumbers[i] << endl;
            }
        }
        else {
            cout << "Спасибо за пройденный опрос!" << endl;
            cout << endl << "Вот список вопросов с вашими ответами" << endl;
            for (size_t i = 0; i < inputNumbers.size(); ++i) {
                cout << "Вопрос " << (i + 1) << ": " << questions[i] << endl << "Ваш ответ: " << inputNumbers[i] << endl;   
            }
        }
        cout << endl << "Введите 1, чтобы продолжить\nВведите 0, чтобы остановить программу\n";
        stop = checkError(stop);
    } while (stop != 0);

}
